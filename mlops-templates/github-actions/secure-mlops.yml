name: Secure MLOps

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write
  security-events: write

jobs:
  build-and-validate:
    runs-on: ubuntu-latest
    env:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      KEY_VAULT_NAME: ${{ secrets.KEY_VAULT_NAME }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Security linting
        run: |
          pip install bandit safety detect-secrets
          bandit -r scanner ai-firewall
          safety check --full-report
          detect-secrets scan --all-files > .secrets.baseline
      - name: Authenticate with Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Validate infrastructure plans
        run: |
          terraform -chdir=mlops-templates/terraform init -backend=false
          terraform -chdir=mlops-templates/terraform validate
          az bicep build --file mlops-templates/bicep/main.bicep
      - name: Run model security tests
        run: |
          python mlops-templates/scripts/model_scan.py --model-path models/latest
      - name: Enforce policy compliance
        run: |
          python governance/policy_check.py --config governance/policies.yaml
      - name: Upload reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: reports/
